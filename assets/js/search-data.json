{
  
    
        "post0": {
            "title": "",
            "content": "Os violin plots ajudam a compreender a distribuição dos valores de um dataset. Neste post vamos explorar alguns exemplos de violin plots, explicar como se interpretam e mostrar algumas técnicas quem ajudam a tornar as visualizações mais intuitivas. . Imports e prepara&#231;&#227;o dos dados . Para começar a nossa investigação, vamos importar as bibliotecas de que iremos necessitar, e criar um dataset com três colunas e perceber como são os plots neste caso: . Igual - Nesta coluna todos os pontos têm o mesmo valor (0.5) | Extremos - Nesta coluna os valores estão nos extremos, metade em 0, metade em 1 | Uniforme - Nesta coluna os valores estão uniformemente distribuídos entre 0 e 1 | . #collapse-hide import pandas as pd, numpy as np, matplotlib.pyplot as plt, seaborn as sns num_pontos=100 igual = 0.5*np.ones(num_pontos) extremos = np.sort((np.arange(num_pontos) % 2)) uniforme = np.arange(num_pontos) / num_pontos df = pd.DataFrame.from_dict({ &#39;Igual&#39;:igual, &#39;Extremos&#39;:extremos, &#39;Uniforme&#39;:uniforme}) df.plot(title=&quot;Valores de cada coluna&quot;); . . Gr&#225;ficos de Violino . Vamos então criar os nossos primeiros violin plots, um para cada coluna, senão são o que estavas à espera perfeito! Entao este post é perfeito para ti! . #collapse-hide fig, eixos = plt.subplots(1,3, figsize=(21,4)) sns.set(style=&quot;whitegrid&quot;) sns.violinplot(x = df.Igual, ax=eixos[0]); sns.violinplot(x = df.Uniforme, ax=eixos[1]); sns.violinplot(x = df.Extremos, ax=eixos[2]); . . Igual - valores todos iguais . Olhando para o gráfico abaixo é fácil de perceber que todos os pontos estão nos 0.5, exatamente como esperávamos. Perfeito! . #collapse-hide sns.violinplot(x=df.Igual); . . Uniforme - valores uniformemente distribu&#237;dos . O caso em que cada ponto tem um valor diferente, entre 0 e 1 é um pouco mais complicado de perceber, e neste caso ter uma grelha vai ajudar a explicar o que estamos a ver: . #collapse-hide sns.violinplot(x=df.Uniforme); . . Neste gráfico temos várias indicações da distribuíção dos valores: . o ponto branco no centro do gráfico representa a média | a linha preta fina mostra a distribuição dos valores, que estão entre 0 e 1 | a linha mais grossa mostra que 50% dos valores estão entre 0.25 e 0.75 | a azul é a estimativa da densidade de valores, ou seja aproximadamente quantos valores existem aí | . O gráfico de densidade (zona azul) não parece mostrar que todos os pontos aparecem o mesmo número de vezes (exatamente uma vez cada um). Poderias esperar um rectângulo entre 0 e 1 porque todos os pontos aparecem exatamente uma vez no dataset. A explicação é que a densidade está a ser calculada com base numa vizinhança de 0.25 para cada lado, e a curva está a ser alisada e cortada. Repara que: . para vizinhanças abaixo de -0.25 e acima de 1.25 não apanhamos quaisquer pontos | em 0 apanhamos apenas os pontos para a direita [0-0.25], pelo que temos 50% da densidade | em 1 apanhamos apenas os pontos para a esquerda [0.75-1], pelo que temos 50% da densidade | entre de 0.25 e 0.75 apanhamos todos os pontos de ambos os lados, pelo que o valor se mantém uniforme a 100% | . Extremos - metade dos valores em cada extremo . A explicação é semelhante ao exemplo anterior: . o ponto branco no centro do gráfico representa a média | a linha preta fina não aparece porque coincide com a grossa | a linha mais grossa mostra que 50% dos valores estão entre 0 e 1 (neste caso são até 100% dos valores) | a azul é a estimativa da densidade de valores, ou seja aproximadamente quantos valores existem aí | . Tal como anteriormente a zona azul aumenta até chegar aos extremos (onde estão localizados todos os pontos) e diminui com a distância aos extremos. . #collapse-hide sns.violinplot(x=df.Extremos); . . Melhorias que podemos fazer . Melhoria #1 juntar as v&#225;rias colunas num &#250;nico plot . A primeira melhoria que podemos fazer, e talvez a mais complicada, é juntar os vários violinos no mesmo gráfico. O seaborn suporta criar gráficos de violino agrupando os valores com base noutra coluna. Vamos utilizar a função melt do pandas, para criar um novo DataFrame com os dados das nossas 3 colunas originais na coluna valores, e a origem do valor na coluna coluna. . #collapse-hide novo_df = df.melt(value_vars=[&#39;Igual&#39;,&#39;Extremos&#39;,&#39;Uniforme&#39;], var_name=&#39;coluna&#39;, value_name=&#39;valores&#39;) novo_df.head() . . coluna valores . 0 Igual | 0.5 | . 1 Igual | 0.5 | . 2 Igual | 0.5 | . 3 Igual | 0.5 | . 4 Igual | 0.5 | . E aqui está o nosso violino agrupado por coluna: . #collapse-hide plt.rcParams[&#39;figure.figsize&#39;]=[16,5] sns.violinplot(x=&quot;coluna&quot;, y=&quot;valores&quot;, data=novo_df); . . Melhoria #2 limitar aos valores que existem . Caso tenhamos de partilhar a visualização com pessoas pouco técnicas, poderá ser complicado de explicar o conceito de densidade, e como aparecem valores negativos numa variável que só varia entre 0 e 1. Não há problema, há afinações simples que podemos fazer para tornar estes gráficos mais compreensíveis! . O parâmetro que limita os pontos que são utilizados para estimar a densidade chama-se cut e tem por defeito o valor 2. Podemos limitar a largura da janela para incluir apenas os valores que existem no dataset alterando este parâmetro cut para 0: . #collapse-hide sns.violinplot(x=&quot;coluna&quot;, y=&quot;valores&quot;, data=novo_df, cut=0); . . Melhoria #3 alterar a estimativa de densidade . Bem melhor! Agora vamos tratar das estimativas de densidade estarem demasiado largas, e por isso darem uma ideia pouco precisa da real distribuição dos dados. . A largura que utilizada para estimar a densidade de pontos é controlada pelo parâmetro bw. . Ao utilizar um valor suficientemente baixo os pontos deixam de ser acumulados, e obtemos uma visualização muito mais precisa da forma dos dados: . #collapse-hide sns.violinplot(x=&quot;coluna&quot;, y=&quot;valores&quot;, data=novo_df, cut=0, bw=0.001); . . Par&#226;metros cut e bw . Abaixo a comparação dos valores dos parâmetros bw, e cut, ilustra bem a necessidade de escolher cuidadosamente os valores de bw e cut. Caso estes valores estejam desadequados poderemos ficar com uma ideia completamente errada da distribuição dos nossos dados! . #collapse-hide params = [ {&#39;l&#39;:0, &#39;bw&#39;:1, &#39;cor&#39;: &#39;rebeccapurple&#39;}, {&#39;l&#39;:1, &#39;bw&#39;:.1, &#39;cor&#39;: &#39;red&#39;}, {&#39;l&#39;:2, &#39;bw&#39;:.01, &#39;cor&#39;: &#39;gold&#39;}] def grafico(p, pos_col, cut): ax=axes[p[&#39;l&#39;], pos_col] sns.violinplot(x=&quot;coluna&quot;, y=&quot;valores&quot;, data=novo_df, cut=cut, bw=p[&#39;bw&#39;], ax=ax); ax.set_title(f&quot;bw={p[&#39;bw&#39;]}, cut={cut}&quot;) ax.set_xlabel(&quot;&quot;) fig, axes=plt.subplots(len(params),2, figsize=(16,len(params)*6)) for p in params: grafico(p, 0, 2) grafico(p, 1, 0) . . E por hoje já chega, obrigado pela companhia e até ao próximo post! .",
            "url": "https://zevarela.github.io/blog/2020/04/05/2020-04-05-violin-plots.html",
            "relUrl": "/2020/04/05/2020-04-05-violin-plots.html",
            "date": " • Apr 5, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "The Very First Post",
            "content": "O primeiro post é sobre… emoji? . É, ou mais precisamente, sobre como introduzir emoji em markdown. Baseado na lista lista compilada pelo rxaviers. . Nota: Caso os emoji não estejam a aparecer no GitHub Pages basta acrescentar jemoji à lista de plugins no ficheiro _config.yml. Obrigado ao Arnie97 pela dica. . plugins: - jekyll-feed - jekyll-gist - jekyll-octicons - jekyll-github-metadata - jemoji . Pessoas . Emoji mais expressivos . :blush: | :smiley: | :relaxed: | . :bowtie: | :smile: | :laughing: | . :smirk: | :heart_eyes: | :kissing_heart: | . :kissing_closed_eyes: | :flushed: | :relieved: | . :satisfied: | :grin: | :wink: | . :stuck_out_tongue_winking_eye: | :stuck_out_tongue_closed_eyes: | :grinning: | . :kissing: | :kissing_smiling_eyes: | :stuck_out_tongue: | . :sleeping: | :worried: | :frowning: | . :anguished: | :open_mouth: | :grimacing: | . :confused: | :hushed: | :expressionless: | . :unamused: | :sweat_smile: | :sweat: | . :disappointed_relieved: | :weary: | :pensive: | . :disappointed: | :confounded: | :fearful: | . :cold_sweat: | :persevere: | :cry: | . :sob: | :joy: | :astonished: | . :scream: | :neckbeard: | :tired_face: | . :angry: | :rage: | :triumph: | . :sleepy: | :yum: | :mask: | . :sunglasses: | :dizzy_face: | :imp: | . :smiling_imp: | :neutral_face: | :no_mouth: | . :innocent: | :alien: | :yellow_heart: | . :blue_heart: | :purple_heart: | :heart: | . :green_heart: | :broken_heart: | :heartbeat: | . :heartpulse: | :two_hearts: | :revolving_hearts: | . :cupid: | :sparkling_heart: | :sparkles: | . :star: | :star2: | :dizzy: | . :boom: | :collision: | :anger: | . :exclamation: | :question: | :grey_exclamation: | . :grey_question: | :zzz: | :dash: | . :sweat_drops: | :notes: | :musical_note: | . :fire: | :hankey: | :poop: | . :shit: | :+1: | :thumbsup: | . :-1: | :thumbsdown: | :ok_hand: | . :punch: | :facepunch: | :fist: | . :v: | :wave: | :hand: | . :raised_hand: | :open_hands: | :point_up: | . :point_down: | :point_left: | :point_right: | . :raised_hands: | :pray: | :point_up_2: | . :clap: | :muscle: | :metal: | . :fu: | :walking: | :runner: | . :running: | :couple: | :family: | . :two_men_holding_hands: | :two_women_holding_hands: | :dancer: | . :dancers: | :ok_woman: | :no_good: | . :information_desk_person: | :raising_hand: | :bride_with_veil: | . :person_with_pouting_face: | :person_frowning: | :bow: | . :couplekiss_man_woman: | :couplekiss_woman_woman: | :couplekiss_man_man: | . :suspect: | :couple_with_heart: | :massage: | . :haircut: | :nail_care: | :boy: | . :girl: | :woman: | :man: | . :baby: | :older_woman: | :older_man: | . :person_with_blond_hair: | :man_with_gua_pi_mao: | :man_with_turban: | . :construction_worker: | :cop: | :angel: | . :princess: | :smiley_cat: | :smile_cat: | . :heart_eyes_cat: | :kissing_cat: | :smirk_cat: | . :scream_cat: | :crying_cat_face: | :joy_cat: | . :pouting_cat: | :japanese_ogre: | :japanese_goblin: | . :see_no_evil: | :hear_no_evil: | :speak_no_evil: | . :guardsman: | :skull: | :feet: | . :lips: | :kiss: | :droplet: | . :ear: | :eyes: | :nose: | . :tongue: | :love_letter: | :bust_in_silhouette: | . :busts_in_silhouette: | :speech_balloon: | :thought_balloon: | . :feelsgood: | :finnadie: | :goberserk: | . :godmode: | :hurtrealbad: | :rage1: | . :rage2: | :rage3: | :rage4: | . :trollface: |   |   | . Natureza . Emoji ao natural . :sunny: | :umbrella: | :cloud: | . :snowflake: | :snowman: | :zap: | . :cyclone: | :foggy: | :ocean: | . :cat: | :dog: | :mouse: | . :hamster: | :rabbit: | :wolf: | . :frog: | :tiger: | :koala: | . :bear: | :pig: | :pig_nose: | . :cow: | :boar: | :monkey_face: | . :monkey: | :horse: | :racehorse: | . :camel: | :sheep: | :elephant: | . :panda_face: | :snake: | :bird: | . :baby_chick: | :hatched_chick: | :hatching_chick: | . :chicken: | :penguin: | :turtle: | . :bug: | :honeybee: | :ant: | . :beetle: | :snail: | :octopus: | . :tropical_fish: | :fish: | :whale: | . :whale2: | :dolphin: | :cow2: | . :ram: | :rat: | :water_buffalo: | . :tiger2: | :rabbit2: | :dragon: | . :goat: | :rooster: | :dog2: | . :pig2: | :mouse2: | :ox: | . :dragon_face: | :blowfish: | :crocodile: | . :dromedary_camel: | :leopard: | :cat2: | . :poodle: | :paw_prints: | :bouquet: | . :cherry_blossom: | :tulip: | :four_leaf_clover: | . :rose: | :sunflower: | :hibiscus: | . :maple_leaf: | :leaves: | :fallen_leaf: | . :herb: | :mushroom: | :cactus: | . :palm_tree: | :evergreen_tree: | :deciduous_tree: | . :chestnut: | :seedling: | :blossom: | . :ear_of_rice: | :shell: | :globe_with_meridians: | . :sun_with_face: | :full_moon_with_face: | :new_moon_with_face: | . :new_moon: | :waxing_crescent_moon: | :first_quarter_moon: | . :waxing_gibbous_moon: | :full_moon: | :waning_gibbous_moon: | . :last_quarter_moon: | :waning_crescent_moon: | :last_quarter_moon_with_face: | . :first_quarter_moon_with_face: | :moon: | :earth_africa: | . :earth_americas: | :earth_asia: | :volcano: | . :milky_way: | :partly_sunny: | :octocat: | . :squirrel: |   |   | . Objetos . Emoji para quê? . :bamboo: | :gift_heart: | :dolls: | . :school_satchel: | :mortar_board: | :flags: | . :fireworks: | :sparkler: | :wind_chime: | . :rice_scene: | :jack_o_lantern: | :ghost: | . :santa: | :christmas_tree: | :gift: | . :bell: | :no_bell: | :tanabata_tree: | . :tada: | :confetti_ball: | :balloon: | . :crystal_ball: | :cd: | :dvd: | . :floppy_disk: | :camera: | :video_camera: | . :movie_camera: | :computer: | :tv: | . :iphone: | :phone: | :telephone: | . :telephone_receiver: | :pager: | :fax: | . :minidisc: | :vhs: | :sound: | . :speaker: | :mute: | :loudspeaker: | . :mega: | :hourglass: | :hourglass_flowing_sand: | . :alarm_clock: | :watch: | :radio: | . :satellite: | :loop: | :mag: | . :mag_right: | :unlock: | :lock: | . :lock_with_ink_pen: | :closed_lock_with_key: | :key: | . :bulb: | :flashlight: | :high_brightness: | . :low_brightness: | :electric_plug: | :battery: | . :calling: | :email: | :mailbox: | . :postbox: | :bath: | :bathtub: | . :shower: | :toilet: | :wrench: | . :nut_and_bolt: | :hammer: | :seat: | . :moneybag: | :yen: | :dollar: | . :pound: | :euro: | :credit_card: | . :money_with_wings: | :e-mail: | :inbox_tray: | . :outbox_tray: | :envelope: | :incoming_envelope: | . :postal_horn: | :mailbox_closed: | :mailbox_with_mail: | . :mailbox_with_no_mail: | :door: | :smoking: | . :bomb: | :gun: | :hocho: | . :pill: | :syringe: | :page_facing_up: | . :page_with_curl: | :bookmark_tabs: | :bar_chart: | . :chart_with_upwards_trend: | :chart_with_downwards_trend: | :scroll: | . :clipboard: | :calendar: | :date: | . :card_index: | :file_folder: | :open_file_folder: | . :scissors: | :pushpin: | :paperclip: | . :black_nib: | :pencil2: | :straight_ruler: | . :triangular_ruler: | :closed_book: | :green_book: | . :blue_book: | :orange_book: | :notebook: | . :notebook_with_decorative_cover: | :ledger: | :books: | . :bookmark: | :name_badge: | :microscope: | . :telescope: | :newspaper: | :football: | . :basketball: | :soccer: | :baseball: | . :tennis: | :8ball: | :rugby_football: | . :bowling: | :golf: | :mountain_bicyclist: | . :bicyclist: | :horse_racing: | :snowboarder: | . :swimmer: | :surfer: | :ski: | . :spades: | :hearts: | :clubs: | . :diamonds: | :gem: | :ring: | . :trophy: | :musical_score: | :musical_keyboard: | . :violin: | :space_invader: | :video_game: | . :black_joker: | :flower_playing_cards: | :game_die: | . :dart: | :mahjong: | :clapper: | . :memo: | :pencil: | :book: | . :art: | :microphone: | :headphones: | . :trumpet: | :saxophone: | :guitar: | . :shoe: | :sandal: | :high_heel: | . :lipstick: | :boot: | :shirt: | . :tshirt: | :necktie: | :womans_clothes: | . :dress: | :running_shirt_with_sash: | :jeans: | . :kimono: | :bikini: | :ribbon: | . :tophat: | :crown: | :womans_hat: | . :mans_shoe: | :closed_umbrella: | :briefcase: | . :handbag: | :pouch: | :purse: | . :eyeglasses: | :fishing_pole_and_fish: | :coffee: | . :tea: | :sake: | :baby_bottle: | . :beer: | :beers: | :cocktail: | . :tropical_drink: | :wine_glass: | :fork_and_knife: | . :pizza: | :hamburger: | :fries: | . :poultry_leg: | :meat_on_bone: | :spaghetti: | . :curry: | :fried_shrimp: | :bento: | . :sushi: | :fish_cake: | :rice_ball: | . :rice_cracker: | :rice: | :ramen: | . :stew: | :oden: | :dango: | . :egg: | :bread: | :doughnut: | . :custard: | :icecream: | :ice_cream: | . :shaved_ice: | :birthday: | :cake: | . :cookie: | :chocolate_bar: | :candy: | . :lollipop: | :honey_pot: | :apple: | . :green_apple: | :tangerine: | :lemon: | . :cherries: | :grapes: | :watermelon: | . :strawberry: | :peach: | :melon: | . :banana: | :pear: | :pineapple: | . :sweet_potato: | :eggplant: | :tomato: | . :corn: |   |   | . Sítios . Emoji para onde? . :house: | :house_with_garden: | :school: | . :office: | :post_office: | :hospital: | . :bank: | :convenience_store: | :love_hotel: | . :hotel: | :wedding: | :church: | . :department_store: | :european_post_office: | :city_sunrise: | . :city_sunset: | :japanese_castle: | :european_castle: | . :tent: | :factory: | :tokyo_tower: | . :japan: | :mount_fuji: | :sunrise_over_mountains: | . :sunrise: | :stars: | :statue_of_liberty: | . :bridge_at_night: | :carousel_horse: | :rainbow: | . :ferris_wheel: | :fountain: | :roller_coaster: | . :ship: | :speedboat: | :boat: | . :sailboat: | :rowboat: | :anchor: | . :rocket: | :airplane: | :helicopter: | . :steam_locomotive: | :tram: | :mountain_railway: | . :bike: | :aerial_tramway: | :suspension_railway: | . :mountain_cableway: | :tractor: | :blue_car: | . :oncoming_automobile: | :car: | :red_car: | . :taxi: | :oncoming_taxi: | :articulated_lorry: | . :bus: | :oncoming_bus: | :rotating_light: | . :police_car: | :oncoming_police_car: | :fire_engine: | . :ambulance: | :minibus: | :truck: | . :train: | :station: | :train2: | . :bullettrain_front: | :bullettrain_side: | :light_rail: | . :monorail: | :railway_car: | :trolleybus: | . :ticket: | :fuelpump: | :vertical_traffic_light: | . :traffic_light: | :warning: | :construction: | . :beginner: | :atm: | :slot_machine: | . :busstop: | :barber: | :hotsprings: | . :checkered_flag: | :crossed_flags: | :izakaya_lantern: | . :moyai: | :circus_tent: | :performing_arts: | . :round_pushpin: | :triangular_flag_on_post: | :jp: | . :kr: | :cn: | :us: | . :fr: | :es: | :it: | . :ru: | :gb: | :uk: | . :de: |   |   | . Símbolos . Só porque existem . :one: | :two: | :three: | . :four: | :five: | :six: | . :seven: | :eight: | :nine: | . :keycap_ten: | :1234: | :zero: | . :hash: | :symbols: | :arrow_backward: | . :arrow_down: | :arrow_forward: | :arrow_left: | . :capital_abcd: | :abcd: | :abc: | . :arrow_lower_left: | :arrow_lower_right: | :arrow_right: | . :arrow_up: | :arrow_upper_left: | :arrow_upper_right: | . :arrow_double_down: | :arrow_double_up: | :arrow_down_small: | . :arrow_heading_down: | :arrow_heading_up: | :leftwards_arrow_with_hook: | . :arrow_right_hook: | :left_right_arrow: | :arrow_up_down: | . :arrow_up_small: | :arrows_clockwise: | :arrows_counterclockwise: | . :rewind: | :fast_forward: | :information_source: | . :ok: | :twisted_rightwards_arrows: | :repeat: | . :repeat_one: | :new: | :top: | . :up: | :cool: | :free: | . :ng: | :cinema: | :koko: | . :signal_strength: | :u5272: | :u5408: | . :u55b6: | :u6307: | :u6708: | . :u6709: | :u6e80: | :u7121: | . :u7533: | :u7a7a: | :u7981: | . :sa: | :restroom: | :mens: | . :womens: | :baby_symbol: | :no_smoking: | . :parking: | :wheelchair: | :metro: | . :baggage_claim: | :accept: | :wc: | . :potable_water: | :put_litter_in_its_place: | :secret: | . :congratulations: | :m: | :passport_control: | . :left_luggage: | :customs: | :ideograph_advantage: | . :cl: | :sos: | :id: | . :no_entry_sign: | :underage: | :no_mobile_phones: | . :do_not_litter: | :non-potable_water: | :no_bicycles: | . :no_pedestrians: | :children_crossing: | :no_entry: | . :eight_spoked_asterisk: | :eight_pointed_black_star: | :heart_decoration: | . :vs: | :vibration_mode: | :mobile_phone_off: | . :chart: | :currency_exchange: | :aries: | . :taurus: | :gemini: | :cancer: | . :leo: | :virgo: | :libra: | . :scorpius: | :sagittarius: | :capricorn: | . :aquarius: | :pisces: | :ophiuchus: | . :six_pointed_star: | :negative_squared_cross_mark: | :a: | . :b: | :ab: | :o2: | . :diamond_shape_with_a_dot_inside: | :recycle: | :end: | . :on: | :soon: | :clock1: | . :clock130: | :clock10: | :clock1030: | . :clock11: | :clock1130: | :clock12: | . :clock1230: | :clock2: | :clock230: | . :clock3: | :clock330: | :clock4: | . :clock430: | :clock5: | :clock530: | . :clock6: | :clock630: | :clock7: | . :clock730: | :clock8: | :clock830: | . :clock9: | :clock930: | :heavy_dollar_sign: | . :copyright: | :registered: | :tm: | . :x: | :heavy_exclamation_mark: | :bangbang: | . :interrobang: | :o: | :heavy_multiplication_x: | . :heavy_plus_sign: | :heavy_minus_sign: | :heavy_division_sign: | . :white_flower: | :100: | :heavy_check_mark: | . :ballot_box_with_check: | :radio_button: | :link: | . :curly_loop: | :wavy_dash: | :part_alternation_mark: | . :white_check_mark: | :black_square_button: | :white_square_button: | . :black_circle: | :white_circle: | :red_circle: | . :large_blue_circle: | :large_blue_diamond: | :large_orange_diamond: | . :small_blue_diamond: | :small_orange_diamond: | :small_red_triangle: | . :small_red_triangle_down: | :shipit: | :trident: | .",
            "url": "https://zevarela.github.io/blog/2020/04/01/the-very-first-post.html",
            "relUrl": "/2020/04/01/the-very-first-post.html",
            "date": " • Apr 1, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://zevarela.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}